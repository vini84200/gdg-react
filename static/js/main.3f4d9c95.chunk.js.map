{"version":3,"sources":["components/Header.js","components/StaticInput.js","components/mocao/Numero.js","components/mocao/Ementa.js","components/mocao/Artigo.js","components/mocao/Corpo.js","components/mocao/MocaoPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","Item","Brand","StaticInput","props","state","selected","event","this","onChange","setState","onClick","onBlur","child","static","value","num","e","React","Component","Numero","change_num","target","kind","Input","textAlign","style","width","year","Ementa","change_ementa","size","offset","ementa","as","height","Artigo","artigo","phantom","number","new","text","Group","getCalling","handleTextChange","handleClick","propsTypes","key","PropTypes","shape","bool","string","paragrafos","array","items","Corpo","id","change_artigo","add_artigo","artigos","corpo","map","MocaoPage","undefined","push","length","console","log","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f4d9c95.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport {Navbar} from 'rbx'\nimport \"rbx/index.css\";\n\n\nfunction Header() {\n  return (\n      <Fragment>\n        <Navbar>\n            <Navbar.Item>\n                <Navbar.Brand>\n                    <h2>GDG</h2>\n                </Navbar.Brand>\n            </Navbar.Item>\n            <Navbar.Item>\n            Home\n            </Navbar.Item>\n        </ Navbar>\n      </Fragment>\n  );\n}\n\nexport default Header;\n","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\n\nclass StaticInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        selected: false\n      };\n    }\n    onChange(event) {\n      this.props.onChange(event);\n    }\n    onClick() {\n        this.setState({\n            selected: true\n        });\n        if (this.props.onClick){\n            this.props.onClick()\n        }\n    }\n    onBlur() {\n      this.setState({\n        selected: false\n      });\n      if (this.props.onBlur){\n          this.props.onBlur();\n      }\n    }\n    render () {\n        return (\n            <Fragment>\n          <this.props.child\n            onClick={() => this.onClick()}\n            onBlur={() => this.onBlur()}\n            static={!this.state.selected && this.props.value}\n            value={this.props.num}\n            onChange={(e) =>this.onChange(e)}\n            {...this.props}\n        />\n        {this.state.selected}\n        </Fragment>\n        );\n    }\n}\n\nexport default StaticInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Field, Control, Help } from \"rbx\";\nimport StaticInput from '../StaticInput'\nclass Numero extends React.Component {\n  onChange(event) {\n    this.props.change_num(event.target.value);\n  }\n\n  render() {\n    return (\n      <Field kind=\"addons\">\n        <strong>Projeto de Resolução nº </strong>\n        <Control>\n          <StaticInput\n            child={Input}\n            textAlign=\"right\"\n            style={{\n                width: \"60px\"\n            }}\n            value={this.props.num}\n            onChange={(e) =>this.onChange(e)}\n          />\n        </Control>\n        <Control>\n          <Input static value={\" / \" + this.props.year}></Input>\n        </Control>\n      </Field>\n    );\n  }\n}\n\nexport default Numero;\n","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport {Column} from 'rbx'\nimport StaticInput from '../StaticInput'\n\nimport { Input, Field, Control, Label, Help } from \"rbx\";\n\n\nclass Ementa extends React.Component {\n\n    onChange(event) {\n      this.props.change_ementa(event.target.value);\n    }\n    render () {\n        return(\n            <Column size={7} offset={4}>\n                <Field>\n                    <Label>\n                        Ementa\n                    </Label>\n                    <Help>\n                        Uma descrição dessa resolução.\n                    </Help>\n                    <StaticInput\n                    child={Input}\n                    value={this.props.ementa}\n                    onChange={(e) => this.onChange(e)}\n                    as=\"Textarea\"\n                    style={{\n                        height: \"100px\"\n                    }}\n                     />\n                </Field>\n            </Column>\n        )\n    }\n}\n\nexport default Ementa;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StaticInput from \"../StaticInput\";\n\nimport { Input, Field, Control, Label, Help, Column } from \"rbx\";\n\nclass Artigo extends React.Component {\n  static propsTypes = {\n    key: PropTypes.number,\n    artigo: PropTypes.shape({\n      phantom: PropTypes.bool,\n      number: PropTypes.number,\n      text: PropTypes.string,\n      paragrafos: PropTypes.array,\n      items: PropTypes.array\n    })\n  };\n\n  getCalling() {\n    if (this.props.artigo.phantom) {\n      return \"New Art.\";\n    }\n    if (this.props.artigo.number > 9) {\n      return \"Art. \" + this.props.artigo.number;\n    } else {\n      return \"Art. \" + this.props.artigo.number + \"°\";\n    }\n  }\n\n  handleClick(e) {\n    if (this.props.phantom && this.props.new) {\n      this.props.new();\n    }\n  }\n\n  handleTextChange(e) {\n    if (this.props.onChange) {\n      this.props.onChange({\n        ...this.props.artigo,\n        text: e.target.value\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Column.Group>\n          <Column size={1}>\n            <strong>{this.getCalling()}</strong>\n          </Column>\n          <Column>\n            <Field>\n              <StaticInput\n                child={Input}\n                value={this.props.artigo ? this.props.artigo.text : \"\"}\n                onChange={e => this.handleTextChange(e)}\n                onClick={() => this.handleClick()}\n              />\n            </Field>\n          </Column>\n        </Column.Group>\n      </Fragment>\n    );\n  }\n}\n\nexport default Artigo;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Artigo from \"./Artigo\";\n\nclass Corpo extends React.Component {\n  change_artigo(artigo, id) {\n    this.props.change_artigo(artigo, id);\n  }\n\n  add_artigo() {\n    this.props.add_artigo();\n  }\n  render() {\n    const artigos = [...this.props.corpo, { phantom: true }];\n    return (\n      <Fragment>\n        {artigos.map((artigo, id) => (\n          <Artigo\n            key={id}\n            artigo={artigo}\n            onChange={artigo => this.change_artigo(artigo, id)}\n            new={() => {\n              this.add_artigo();\n            }}\n          />\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nexport default Corpo;\n","import React, { Component, Fragment } from \"react\";\nimport { Container, Content } from \"rbx\";\nimport PropTypes from \"prop-types\";\n\nimport Numero from \"./Numero\";\nimport Ementa from \"./Ementa\";\nimport Corpo from \"./Corpo\";\n\nclass MocaoPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      num: undefined,\n      year: 2020,\n      ementa: \"\",\n      corpo: [\n        {\n          id: 0,\n          number: 1,\n          text: \"This is a article\"\n        }\n      ]\n    };\n  }\n\n  change_num(num) {\n    this.setState({\n      num: num\n    });\n  }\n\n  change_ementa(text) {\n    this.setState({\n      ementa: text\n    });\n  }\n\n  add_artigo(artigo) {\n    const artigos = [...this.state.corpo];\n    artigos.push({\n      number: this.state.corpo[this.state.corpo.length - 1].number + 1\n    });\n    this.setState({\n      corpo: artigos\n    });\n\n    console.log(\"Added artigo\");\n  }\n\n  change_artigo(artigo, id) {\n    const artigos = [...this.state.corpo];\n    artigos[id] = artigo;\n    if (artigos[id].phantom) {\n      artigos[id].phantom = false;\n      artigos[id].number =\n        this.state.corpo[this.state.corpo.length - 1].number + 1;\n    }\n    this.setState({\n      corpo: artigos\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Container>\n          <Content>\n            <h1>Criar uma 'Proposta de Resolução'</h1>\n            <Numero\n              num={this.state.num}\n              year={this.state.year}\n              change_num={num => this.change_num(num)}\n            />\n            <Ementa\n              ementa={this.state.ementa}\n              change_ementa={text => this.change_ementa(text)}\n            />\n\n            <Corpo\n              corpo={this.state.corpo}\n              change_artigo={(artigo, id) => this.change_artigo(artigo, id)}\n              add_artigo={() => {\n                this.add_artigo();\n              }}\n            />\n          </Content>\n        </Container>\n      </Fragment>\n    );\n  }\n}\nexport default MocaoPage;\n","import React from 'react';\nimport \"rbx/index.css\";\nimport Header from './components/Header'\nimport MocaoPage from './components/mocao/MocaoPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <MocaoPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}